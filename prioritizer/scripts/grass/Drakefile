
BASE="$(pwd)"

RASTER_RESOLUTION=100

; Paths
RESULT_DIR=results
MAXENT_DIR=MaxEnt

; GRASS
GRASSDATA="/home/klsvd/GRASSDATA/"
LOCATION=DV
MAPSET=PERMANENT

LOCATION_PATH=$[GRASSDATA]/$[LOCATION]
PERMANENT_PATH=$[LOCATION_PATH]/PERMANENT

GISBASE=$(grass --config path)

; MaxEnt
MAXENT_BIN="/home/klsvd/SRS/MaxEnt/maxent.jar"


$[PERMANENT_PATH], %createDB <- [-timecheck]
    ./createDB.sh $[LOCATION_PATH] 
    export GRASS_BATCH_JOB="./setDefaultRegion.sh"
    grass $[PERMANENT_PATH]
    unset GRASS_BATCH_JOB
    
; set_resolution.log, %set_resolution <- $[PERMANENT_PATH] [-timecheck]
;     grass $[PERMANENT_PATH] <<EOF             
;         g.region res=$RASTER_RESOLUTION -p > $[OUTPUT]
;     EOF

switch_to_default_BBox_set_resolution.log, %switch_to_default_BBox_set_resolution.log <- $[PERMANENT_PATH] [-timecheck]
    grass $[PERMANENT_PATH] <<EOF             
        g.region -d res=$[RASTER_RESOLUTION] -p > $[OUTPUT]
    EOF

set_logg_BBOX.log, %set_logg_BBOX <- import_declarations.log, %import_declarations
    grass $[PERMANENT_PATH] <<EOF             
        g.region vect=declar_prim16 -p > $[OUTPUT]
    EOF
    

remove_mask.log, %remove_mask, %raster_operations <- $[PERMANENT_PATH] [-timecheck]
    echo "Try to remove mask" >  $[OUTPUT]
    grass $[PERMANENT_PATH] <<EOF
        g.remove type=rast name="MASK" -f 2>> $[OUTPUT] 
    EOF
    echo "Mask removed" >>  $[OUTPUT]


; Импорт исходных данных

import_AOI.log, %import_AOI, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_aoi.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

import_roads.log, %import_roads, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_roads.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

import_vud.log, %import_vud, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_vud.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

import_declarations.log, %import_declarations, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_declarations.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB


import_logging.log, %import_logging, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_logging.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

import_settlements.log, %import_settlements, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_settlements.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

import_wood_stocks.log, %import_wood_stocks, %import_vector, %import_all <- $[PERMANENT_PATH] [-timecheck]
    export GRASS_BATCH_JOB="./import_stocks.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB


; Создание композитного слоя всех имеющихся рубок и деклараций
logg_composite.log, %logg_composite <- import_declarations.log, %import_declarations, import_logging.log, %import_logging
    grass $[PERMANENT_PATH] <<EOF             
        v.patch input=declar_prim16,logging out=logg_composite --o 2> $[OUTPUT]
    EOF



; Растеризация
create_AOI_mask.log, %create_AOI_mask, %raster_operations <- import_AOI.log, %import_AOI, switch_to_default_BBox_set_resolution.log, %switch_to_default_BBox_set_resolution.log, remove_mask.log, %remove_mask
    grass $[PERMANENT_PATH] <<EOF > $[OUTPUT]
        g.region vect=AOI
        v.to.rast type=area input=AOI output=AOI use=val --o
        r.mask raster=AOI
    EOF
    

rasterize_roads.log, %rasterize_roads, %raster_operations <- import_roads.log, %import_roads, create_AOI_mask.log, %create_AOI_mask
    export GRASS_BATCH_JOB="./vect_roads_to_rast.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

rasterize_vud.log, %rasterize_vud, %raster_operations <- import_vud.log, %import_vud, create_AOI_mask.log, %create_AOI_mask
    export GRASS_BATCH_JOB="./vect_vud_to_rast.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB


rasterize_logg_composite.log, %rasterize_logg_composite, %raster_operations <- logg_composite.log, %logg_composite, create_AOI_mask.log, %create_AOI_mask
    grass $[PERMANENT_PATH] <<EOF > $[OUTPUT]
        v.to.rast input=logg_composite output=logg_composite use=val --o
    EOF

rasterize_wood_stocks.log, %rasterize_wood_stocks, %raster_operations <- import_wood_stocks.log, %import_wood_stocks, create_AOI_mask.log, %create_AOI_mask
    grass $[PERMANENT_PATH] <<EOF > $[OUTPUT]
        v.to.rast type=point input=wood_stocks output=wood_stocks use=val --o
    EOF


background.log, %background, %raster_operations <- create_AOI_mask.log, %create_AOI_mask
    grass $[PERMANENT_PATH] <<EOF             
        r.mapcalc expression="background = 1" --o 2> $[OUTPUT]
    EOF

; Создание композитного слоя точек продаж
create_stocks_comp.log, %create_stocks_comp <- rasterize_wood_stocks.log, %rasterize_wood_stocks, rasterize_roads.log, %rasterize_roads
    grass $[PERMANENT_PATH] <<EOF > $[OUTPUT]
        r.patch input=wood_stocks,roads_railway output=wood_stocks_comp
    EOF


; Файл стоимостей движения по типам покрытия:
road_costs.csv <- [-timecheck]
    cat <<EOF > $[OUTPUT]
    roads_railway: 0.0
    roads_asfalt: 0.30
    roads_good_grunt: 0.50
    roads_grunt: 0.60
    roads_land: 0.70
    roads_other: 0.100
    roads_trop: 1.00
    background: 2.50
    EOF

; Рассчет расстояний
dist_to_roads.log, %dist_to_roads, %raster_operations <- rasterize_roads.log, %rasterize_roads, create_AOI_mask.log, %create_AOI_mask
    export GRASS_BATCH_JOB="./dist_to_roads.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

dist_to_woods.log, %dist_to_woods, %raster_operations <- rasterize_vud.log, %rasterize_vud, create_AOI_mask.log, %create_AOI_mask
    export GRASS_BATCH_JOB="./dist_to_woods.sh"
    grass $[PERMANENT_PATH] 2> $[OUTPUT]
    unset GRASS_BATCH_JOB

delivery_cost.log, %delivery_cost <- road_costs.csv, create_stocks_comp.log, %create_stocks_comp, rasterize_roads.log, %rasterize_roads, background.log, %background
    python ./cost_of_delivery.py --result delivery_cost --cost_data=$[INPUT] --stocks=wood_stocks_comp --overwrite
    touch $[OUTPUT]


; MaxEnt
$[MAXENT_DIR], %make_maxent_dir <-  [-timecheck]
    mkdir -p $[OUTPUT]
    mkdir -p $[OUTPUT]/Results
    mkdir -p $[OUTPUT]/Env
    echo "This is dir for store exported files for using Maxent" >  $[OUTPUT]/descr.txt

$[MAXENT_DIR]/logging.csv, %export_logging_csv <- $[MAXENT_DIR]/descr.txt, %make_maxent_dir, rasterize_logg_composite.log, %rasterize_logg_composite [-timecheck]
    grass $[PERMANENT_PATH] <<EOF 
        r.to.vect in=logg_composite out=tmp_point1_$$ type=area
        v.random -a out=tmp_point_res_$$ npoint=2 restrict=tmp_point1_$$
        v.db.addtable "tmp_point_res_$$" col="x double, y double, class text" > /dev/null
        v.to.db "tmp_point_res_$$" col="x,y" opt=coor > /dev/null 
        v.db.update "tmp_point_res_$$"  col=class val="logg"
        v.db.select "tmp_point_res_$$" sep=',' col="class,x,y" > $[OUTPUT] 
        g.remove type=vect pat="tmp_point*" -f > /dev/null
    EOF


$[MAXENT_DIR]/Env/dist_forest_spec_dub.asc, $[MAXENT_DIR]/Env/dist_forest_spec_jasen.asc, $[MAXENT_DIR]/Env/dist_forest_spec_kedr.asc, $[MAXENT_DIR]/Env/dist_forest_spec_lipa.asc, %export_dists_to_woods_maxent <- $[MAXENT_DIR]/descr.txt, %make_maxent_dir, dist_to_woods.log, %dist_to_woods
    grass $[PERMANENT_PATH] <<EOF 
        g.region vect=declar_prim16 res=$[RASTER_RESOLUTION]
        r.out.gdal in=dist_forest_spec_dub out=$[OUTPUT0] format=AAIGrid nodata=-9999 createopt="FORCE_CELLSIZE=TRUE" --o
        r.out.gdal in=dist_forest_spec_dub out=$[OUTPUT1] format=AAIGrid nodata=-9999 createopt="FORCE_CELLSIZE=TRUE" --o
        r.out.gdal in=dist_forest_spec_dub out=$[OUTPUT2] format=AAIGrid nodata=-9999 createopt="FORCE_CELLSIZE=TRUE" --o
        r.out.gdal in=dist_forest_spec_dub out=$[OUTPUT3] format=AAIGrid nodata=-9999 createopt="FORCE_CELLSIZE=TRUE" --o
        g.region -d res=$[RASTER_RESOLUTION]
    EOF
    
$[MAXENT_DIR]/Env/delivery_cost.asc, %export_delivery_cost_to_maxent <- $[MAXENT_DIR]/descr.txt, %make_maxent_dir, delivery_cost.log, %delivery_cost
    grass $[PERMANENT_PATH] <<EOF 
        g.region vect=declar_prim16 res=$[RASTER_RESOLUTION]
        r.out.gdal in=delivery_cost out=$[OUTPUT] format=AAIGrid nodata=-9999 createopt="FORCE_CELLSIZE=TRUE" --o
        g.region -d res=$[RASTER_RESOLUTION]
    EOF



$[MAXENT_DIR]/Results/logg.asc, %maxent_model <- $[MAXENT_DIR]/logging.csv, $[MAXENT_DIR]/Env/dist_forest_spec_dub.asc, $[MAXENT_DIR]/Env/dist_forest_spec_jasen.asc, $[MAXENT_DIR]/Env/dist_forest_spec_kedr.asc, $[MAXENT_DIR]/Env/dist_forest_spec_lipa.asc, $[MAXENT_DIR]/Env/delivery_cost.asc, %export_dists_to_woods_maxent, %export_delivery_cost_to_maxent
    java -jar $[MAXENT_BIN] nowarnings noprefixes  outputdirectory=$[MAXENT_DIR]/Results samplesfile=$[INPUT0] environmentallayers=$[MAXENT_DIR]/Env askoverwrite=false visible=false threads=3 jackknife=true randomtestpoints=20 maximumiterations=1500 autorun

import_maxent_model.log, %import_maxent_model <- $[MAXENT_DIR]/Results/logg.asc, %maxent_model
    grass $[PERMANENT_PATH] <<EOF 
        r.in.gdal in=$[INPUT] out=maxent_model -o --o 2> $[OUTPUT]
    EOF

maxent_to_procent.log, %maxent_to_procent, %raster_operations  <- import_maxent_model.log, %import_maxent_model
    grass $[PERMANENT_PATH] <<EOF 
        g.region rast=maxent_model
        r.mapcalc "maxent_procent = int(maxent_model * 100)" --o 2> $[OUTPUT]
        g.region -d res=$[RASTER_RESOLUTION]
    EOF


; Экспорт результатов
$[RESULT_DIR], %make_output_dir <- [-timecheck]
    mkdir -p $[OUTPUT]
    echo "This is dir for store exported result files" >  $[OUTPUT]/descr.txt



$[RESULT_DIR]/delivery_cost_rgb.tif, %delivery_cost_to_RGB, %raster_operations  <- delivery_cost.log, %delivery_cost, $[RESULT_DIR]/descr.txt, %make_output_dir
    export GRASS_BATCH_JOB="./delivery_to_RGB.sh"
    grass $[PERMANENT_PATH]
    unset GRASS_BATCH_JOB

$[RESULT_DIR]/maxent_procent.tif, %export_maxent_procent, %raster_operations  <- maxent_to_procent.log, %maxent_to_procent, $[RESULT_DIR]/descr.txt, %make_output_dir
    grass $[PERMANENT_PATH] <<EOF
        r.out.gdal in=maxent_procent out=$[OUTPUT] createopt="COMPRESS=DEFLATE" --o
    EOF

$[RESULT_DIR]/maxent_rgb.tif, %maxent_to_RGB, %raster_operations  <- import_maxent_model.log, %import_maxent_model, $[RESULT_DIR]/descr.txt, %make_output_dir
    export GRASS_BATCH_JOB="./maxent_to_RGB.sh"
    grass $[PERMANENT_PATH]
    unset GRASS_BATCH_JOB
